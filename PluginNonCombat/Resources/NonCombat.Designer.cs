//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaywardGamers.KParser.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NonCombat {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NonCombat() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WaywardGamers.KParser.Resources.NonCombat", typeof(NonCombat).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chat Type:.
        /// </summary>
        internal static string ChatPluginCategoryLabel {
            get {
                return ResourceManager.GetString("ChatPluginCategoryLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speaker:.
        /// </summary>
        internal static string ChatPluginSpeakerLabel {
            get {
                return ResourceManager.GetString("ChatPluginSpeakerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chat.
        /// </summary>
        internal static string ChatPluginTabName {
            get {
                return ResourceManager.GetString("ChatPluginTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item                 Time Used\n.
        /// </summary>
        internal static string ItemsPluginDetailsHeader {
            get {
                return ResourceManager.GetString("ItemsPluginDetailsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item                                  Used\n.
        /// </summary>
        internal static string ItemsPluginGeneralHeader {
            get {
                return ResourceManager.GetString("ItemsPluginGeneralHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player:.
        /// </summary>
        internal static string ItemsPluginPlayerLabel {
            get {
                return ResourceManager.GetString("ItemsPluginPlayerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Detail.
        /// </summary>
        internal static string ItemsPluginShowDetail {
            get {
                return ResourceManager.GetString("ItemsPluginShowDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items.
        /// </summary>
        internal static string ItemsPluginTabName {
            get {
                return ResourceManager.GetString("ItemsPluginTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -No Information-.
        /// </summary>
        internal static string PlayerInfoPluginNoInfo {
            get {
                return ResourceManager.GetString("PlayerInfoPluginNoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player Info.
        /// </summary>
        internal static string PlayerInfoPluginTabName {
            get {
                return ResourceManager.GetString("PlayerInfoPluginTabName", resourceCulture);
            }
        }
    }
}
